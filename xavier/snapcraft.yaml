name: jetson-xavier-kernel
version: 4.9-tegra-l4t-r32.2.1
summary: nvidia Jetson Xavier kernel
description: nvidia Jetson Xavier kernel
grade: stable
confinement: strict
type: kernel
build-base: core18
architectures: [ arm64 ]

parts:
  kernel:
    plugin: nil
    source: ../src
    override-pull: |
      snapcraftctl pull
      # Get kernel sources, which are distributed across different repos
      mv l4t_32.2.1/source_sync.sh .
      ./source_sync.sh -k tegra-l4t-r32.2.1
      # Apply canonical patches - apparmor stuff essentially
      cd sources/kernel/kernel-4.9
      # All 32.1.0 patches apply cleanly - still use them
      git am ../../../l4t_32.1.0/patch/*
    override-build: |
      JETSON_KERNEL_CONFIG=tegra_defconfig ./build.sh
    build-packages:
      - lsb-release
      - bc
      - git
      - libssl-dev
      - rsync
      - lzop
      - gcc-aarch64-linux-gnu
      - jq
      - squashfs-tools
      - curl
      - build-essential

  firmware:
    after: [ kernel ]
    plugin: nil
    override-build: |
      set -xe
      wget https://developer.nvidia.com/embedded/dlc/r32-2-1_Release_v1.0/TX2-AGX/Tegra186_Linux_R32.2.1_aarch64.tbz2 \
        -O Tegra186_Linux_R32.2.1_aarch64.tbz2
      tar xf Tegra186_Linux_R32.2.1_aarch64.tbz2
      tar xf Linux_for_Tegra/nv_tegra/nvidia_drivers.tbz2 lib/firmware/
      cd lib; cp -r firmware/ "$SNAPCRAFT_PART_INSTALL"

  waitrandom:
    source: ../waitrandom
    source-type: local
    plugin: nil
    override-build: |
      set -x
      if [ -x "/usr/bin/arm-linux-gnueabihf-gcc" ]; then
          aarch64-linux-gnu-gcc -o waitrandom -Wall -Werror waitrandom.c
      else
          gcc -o waitrandom -Wall -Werror waitrandom.c
      fi
    build-packages:
      - build-essential
      - on amd64 to arm64:
        - gcc-aarch64-linux-gnu:amd64

  initramfs:
    after: [ kernel, firmware, waitrandom ]
    plugin: nil
    build-packages:
      - dpkg
      - wget
    source: ../initramfs
    override-build: |
      set -ex
      mkdir -p lib/firmware
      cp "$SNAPCRAFT_STAGE"/firmware/tegra*_xusb_firmware lib/firmware/
      # Copy haveged so we can speed up seeding of rng
      mkdir sbin bin
      mkdir lib/aarch64-linux-gnu
      cp ../../waitrandom/build/waitrandom bin/
      "$SNAPCRAFT_PROJECT_DIR"/get-packages.sh haveged libhavege1
      cd unpack
      cp usr/sbin/haveged ../sbin/
      cp -a usr/lib/aarch64-linux-gnu/libhavege* ../lib/aarch64-linux-gnu/
      cd -; rm -rf unpack
      find . | cpio --quiet -o -H newc | lzma >> "$SNAPCRAFT_STAGE"/initrd.img

  # Create (signed) aboot image
  abootimg:
    after: [ initramfs ]
    plugin: nil
    source: boot/
    source-type: local
    build-packages:
      - abootimg
    override-build: |
      set -ex
      BOOT_IMG=boot.img
      abootimg --create $BOOT_IMG -f bootimg.cfg -k "$SNAPCRAFT_STAGE"/kernel.img \
          -r "$SNAPCRAFT_STAGE"/initrd.img
      FLASH_D=../../firmware/build/Linux_for_Tegra/bootloader
      mv $BOOT_IMG $FLASH_D
      cd $FLASH_D
      ./tegraflash.py --chip 0x19 --key None --cmd "sign $BOOT_IMG"
      mv boot_sigheader.img.encrypt "$SNAPCRAFT_STAGE"/boot.img
    override-prime: |
      set -ex
      cp "$SNAPCRAFT_STAGE"/boot.img "$SNAPCRAFT_PRIME"/
